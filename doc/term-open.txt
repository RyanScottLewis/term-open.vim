*term-open.txt*  A smarter `termopen` function for NeoVim.
*term-open*

==============================================================================
CONTENTS                                                    *term-open-contents*

    USAGE       .................................... |term-info-usage|
    FUNCTIONS   .................................... |term-info-functions|

==============================================================================
USAGE                                                          *term-info-usage*
>
  " In a new tab in insert mode
  :call TermOpen("/bin/zsh", { "location" : "tab", "insert" : 1 })

  " Shortcut for opening a new window at the bottom of the screen, resized, and
  " started in insert mode
  :call TermOpenConsole("/bin/zsh")

  " Personally, I map TermOpenConsole in my `init.vim`:
  nmap <leader>T :call TermOpenConsole("/bin/zsh")<CR>
<
==============================================================================
FUNCTIONS                                                  *term-info-functions*

TermOpen({cmd}[, {opts}]}                                           *TermOpen()*

    Open a terminal in a buffer, window, or tab and optionally in Insert mode.

    Expands the {opts} argument of the |termopen| function to allow the
    following keys:

      'location'  Can be 'buffer', 'window' or 'tab'.
      'command'   Command(s) to execute after opening.
      'insert'    Start insert mode after opening the terminal and running the
                  'command' option, if any.

    The 'buffer' value for the 'location' option may seem useless, but it comes
    in handy when trying to open a terminal in a context without a buffer open,
    such as a Startify command:
>
      let g:startify_commands = [
      \   {'h': [ 'Help', ':help' ]},
      \   {'t': [ 'Terminal', 'call TermOpen("/bin/zsh", {
      \     "location" : "buffer",
      \     "insert" : 1
      \   })' ]}
      \ ]
<
TermOpenConsole({cmd}[, {opts}]}                             *TermOpenConsole()*
    Open a terminal a new window at the bottom of the screen in Insert mode.

    Expands the {opts} argument of the |termopen| function to allow the
    following keys:

        'resize'     Number of lines to resize to after opening (default: 10).
        'fixheight'  Set `winfixheight` on the new window (default: 1).

==============================================================================
